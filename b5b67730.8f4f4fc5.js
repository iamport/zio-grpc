(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(87)),o={title:"Installing ZIO gRPC",sidebar_label:"Installing",custom_edit_url:"https://github.com/scalapb/zio-grpc/edit/master/docs/installation.md"},c={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installing ZIO gRPC",description:"Determining the right version",source:"@site/../zio-grpc-docs/target/mdoc/installation.md",slug:"/installation",permalink:"/zio-grpc/docs/installation",editUrl:"https://github.com/scalapb/zio-grpc/edit/master/docs/installation.md",version:"current",sidebar_label:"Installing",sidebar:"someSidebar",previous:{title:"Basics Tutorial",permalink:"/zio-grpc/docs/basics"},next:{title:"Generated Code Reference",permalink:"/zio-grpc/docs/generated-code"}},l=[{value:"Determining the right version",id:"determining-the-right-version",children:[]},{value:"Installation using SBT (Recommended)",id:"installation-using-sbt-recommended",children:[]},{value:"Generating code using ScalaPBC (CLI)",id:"generating-code-using-scalapbc-cli",children:[]}],s={toc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"determining-the-right-version"},"Determining the right version"),Object(i.b)("p",null,"The version of zio-grpc needs to be compatible with the version of ScalaPB in order to\navoid unintended evictions and ensure binary compatibility:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"ScalaPB"),Object(i.b)("th",{parentName:"tr",align:null},"ZIO gRPC"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"0.11.x"),Object(i.b)("td",{parentName:"tr",align:null},"0.5.x")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"0.10.x"),Object(i.b)("td",{parentName:"tr",align:null},"0.4.x")))),Object(i.b)("h2",{id:"installation-using-sbt-recommended"},"Installation using SBT (Recommended)"),Object(i.b)("p",null,"If you are building with sbt, add the following to your ",Object(i.b)("inlineCode",{parentName:"p"},"project/plugins.sbt"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-scala"},'addSbtPlugin("com.thesamet" % "sbt-protoc" % "1.0.2")\n\nlibraryDependencies +=\n  "com.thesamet.scalapb.zio-grpc" %% "zio-grpc-codegen" % "0.5.0"\n')),Object(i.b)("p",null,"Then, add the following lines to your ",Object(i.b)("inlineCode",{parentName:"p"},"build.sbt"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-scala"},'PB.targets in Compile := Seq(\n    scalapb.gen(grpc = true) -> (sourceManaged in Compile).value / "scalapb",\n    scalapb.zio_grpc.ZioCodeGenerator -> (sourceManaged in Compile).value / "scalapb"\n)\n\nlibraryDependencies ++= Seq(\n    "io.grpc" % "grpc-netty" % "1.41.0",\n    "com.thesamet.scalapb" %% "scalapb-runtime-grpc" % scalapb.compiler.Version.scalapbVersion\n)\n')),Object(i.b)("p",null,"This configuration will set up the ScalaPB code generator alongside the ZIO gRPC code generator.\nUpon compilation, the source generator will process all proto files under ",Object(i.b)("inlineCode",{parentName:"p"},"src/main/protobuf"),".\nThe ScalaPB generator will generate case classes for all messages as well as methods to serialize and deserialize those messages. The ZIO gRPC code generator will generate code as described in the ",Object(i.b)("a",{parentName:"p",href:"/zio-grpc/docs/generated-code"},"generated code section"),"."),Object(i.b)("h2",{id:"generating-code-using-scalapbc-cli"},"Generating code using ScalaPBC (CLI)"),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"See ",Object(i.b)("a",{parentName:"h5",href:"http://scalapb.github.io/scalapbc.html"},"installation instructions for ScalaPBC"),".")),Object(i.b)("div",{parentName:"div",className:"admonition-content"})),Object(i.b)("p",null,"If you are using ScalaPBC to generate Scala code from the CLI, you can invoke the zio code generator like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"scalapbc \\\n--plugin-artifact=com.thesamet.scalapb.zio-grpc:protoc-gen-zio:0.5.0:default,classifier=unix,ext=sh,type=jar\\\n-- e2e/src/main/protobuf/service.proto --zio_out=/tmp/out --scala_out=grpc:/tmp/out \\\n-Ie2e/src/main/protobuf -Ithird_party -Iprotobuf\n")),Object(i.b)("p",null,"You will need to add to your project the following libraries:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"com.thesamet.scalapb::scalapb-runtime-grpc:0.11.8")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"com.thesamet.scalapb.zio-grpc:zio-grpc-core:0.5.0")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"io.grpc:grpc-netty:1.41.0"))))}p.isMDXComponent=!0},87:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),u=a,m=b["".concat(o,".").concat(u)]||b[u]||d[u]||i;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);